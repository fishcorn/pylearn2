jobman.experiment = 'pylearn2.scripts.jobman.experiment.train_experiment'
hyper_parameters.h0_lr_scale = 0.0008557900367789351
hyper_parameters.nonlinearity_params = "'left_slope': 0.0,"
hyper_parameters.momentum_final = 0.99
hyper_parameters.momentum_initial = 0.5
jobman.start_time = 1447719189.435456
hyper_parameters.max_epochs = 5000
yaml_template = '!obj:pylearn2.train.Train {\n  dataset: &train !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {\n    preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/train.pkl",\n    preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",\n    start: 0,\n    stop: 40000,\n  },\n\n  model: !obj:pylearn2.models.mlp.MLP {\n    layers: [\n      !obj:pylearn2.models.mlp.ConvElemwise {\n        layer_name: \'h0\',\n        nonlinearity: !obj:pylearn2.models.mlp.%(nonlinearity_type)sConvNonlinearity { %(nonlinearity_params)s },\n        W_lr_scale: %(h0_lr_scale)f,\n        b_lr_scale: %(h0_lr_scale)f,\n        output_channels: 32,\n        init_bias: 1,\n        irange: 0.01,\n        kernel_shape: [5, 5],\n        pool_type: \'max\',\n        kernel_stride: [1, 1],\n        pool_shape: [3, 3],\n        pool_stride: [2, 2],\n        max_kernel_norm: 1.8,\n        detector_normalization: !obj:pylearn2.expr.normalize.CrossChannelNormalization {\n          alpha: 5e-05,\n          beta: 0.75,\n        },\n      },\n      !obj:pylearn2.models.mlp.RectifiedLinear {\n        layer_name: \'h1\',\n        dim: 1000,\n        W_lr_scale: %(h0_lr_scale)f,\n        b_lr_scale: %(h0_lr_scale)f,\n        irange: 0.01,\n      },\n      !obj:pylearn2.models.mlp.Cos {\n        layer_name: \'h2\',\n        dim: %(h2_width)d,\n        W_lr_scale: %(h0_lr_scale)f,\n        b_lr_scale: %(h0_lr_scale)f,\n        irange: 0.01,\n      },\n      !obj:pylearn2.models.mlp.Softmax {\n        layer_name: \'y\',\n        n_classes: 10,\n        irange: 0.01,\n        W_lr_scale: %(h0_lr_scale)f,\n        b_lr_scale: %(h0_lr_scale)f,\n      }\n    ],\n    input_space: !obj:pylearn2.space.Conv2DSpace {\n      shape: &window_size [32, 32],\n      num_channels: 3,\n      axes: [\'c\', 0, 1, \'b\'],\n    },\n    monitor_targets: 1,\n    batch_size: &batch_size 100,\n  },\n\n  algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {\n    batch_size: *batch_size,\n    learning_rate: 1.0,\n    learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {\n      init_momentum: %(momentum_initial)f,\n    },\n    train_iteration_mode: \'even_sequential\',\n    monitor_iteration_mode: \'even_sequential\',\n    monitoring_batches: 5,\n    monitoring_dataset: {\n      train: *train,\n      \'valid\': !obj:pylearn2.datasets.zca_dataset.ZCA_Dataset {\n        preprocessed_dataset: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/train.pkl",\n        preprocessor: !pkl: "${PYLEARN2_DATA_PATH}/cifar10/pylearn2_gcn_whitened/preprocessor.pkl",\n        start: 40000,\n        stop: 50000,\n      },\n    },\n\n    termination_criterion: !obj:pylearn2.termination_criteria.And\n    { criteria: [\n\n        !obj:pylearn2.termination_criteria.MonitorBased { \n          channel_name: \'valid_objective\',\n          prop_decrease: 0.,\n          N: 100,\n        },\n\n        !obj:pylearn2.termination_criteria.EpochCounter {\n          max_epochs: %(max_epochs)d,\n        },\n\n    ]},\n\n  },\n\n\n  extensions: [\n    !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {\n      channel_name: \'valid_objective\',\n      save_path: "lsh8_CIFAR10_convnet_1layer_bind_lrs_%(nonlinearity_type)s_best.pkl",\n    },\n    !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {\n      start: %(momentum_start)d,\n      saturate: %(momentum_saturate)d,\n      final_momentum: %(momentum_final)f,\n    },\n  ],\n\n  save_freq: 5,\n  save_path: "lsh8_CIFAR10_convnet_1layer_bind_lrs_%(nonlinearity_type)s_model.pkl"\n}\n'
jobman.status = 5
hyper_parameters.momentum_saturate = 100
hyper_parameters.nonlinearity_type = 'Rectifier'
hyper_parameters.h2_width = 512.0
jobman.time = 'Mon Nov 16 17:13:07 2015'
hyper_parameters.momentum_start = 1
